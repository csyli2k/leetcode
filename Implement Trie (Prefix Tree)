class TreeNode():
    def __init__(self):
        self.tree={}
        self.end= False
class Trie:

    def __init__(self):
        self.root=TreeNode()
        

    def insert(self, word: str) -> None:
        curr=self.root
        for a in word:
            if a not in curr.tree:
                curr.tree[a]=TreeNode()
            curr=curr.tree[a]
        curr.end=True
        

    def search(self, word: str) -> bool:
        curr= self.root
        for a in word:
            if a not in curr.tree:
                return False
            curr=curr.tree[a]
        return curr.end
        

    def startsWith(self, prefix: str) -> bool:
        curr=self.root
        for a in prefix:
            if a not in curr.tree:
                return False
            curr=curr.tree[a]
        return True

# Your Trie object will be instantiated and called as such:
# obj = Trie()
# obj.insert(word)
# param_2 = obj.search(word)
# param_3 = obj.startsWith(prefix)