# Definition for a binary tree node.
# class TreeNode:
#     def __init__(self, x):
#         self.val = x
#         self.left = None
#         self.right = None

class Solution:
    def lowestCommonAncestor(self, root: 'TreeNode', p: 'TreeNode', q: 'TreeNode') -> 'TreeNode':
        temp=deque()
        temp.append(root)
        while temp:
            curr=temp.popleft()
            if curr.val > q.val and curr.val > p.val and curr.left:
                temp.append(curr.left)
            elif curr.val < q.val and curr.val < p.val and curr.right:
                temp.append(curr.right)
            else:
                return curr
        return -1