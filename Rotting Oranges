class Solution:
    def orangesRotting(self, grid: List[List[int]]) -> int:
        fresh_o=0
        q=deque()
        q.append([])
        m=len(grid)
        n=len(grid[0])
        for i in range(m):
            for j in range(n):
                if grid[i][j]==2:
                    q[0].append((i,j))
                if grid[i][j]==1:
                    fresh_o+=1

        
        dir=[(1,0), (0,1), (-1,0), (0,-1)]
        res=0
        while q:
            curr=q.popleft()
            temp=[]
            t_n=len(curr)
            for i in range(t_n):
                curr_i, curr_j=curr[i]
                for di, dj in dir:
                    new_i=curr_i+di
                    new_j=curr_j+dj
                    if 0<=new_i< m and 0<=new_j<n and grid[new_i][new_j]==1:
                        fresh_o-=1
                        grid[new_i][new_j]=2
                        temp.append((new_i, new_j))
            if temp:
                q.append(temp)
                res+=1
        return res if fresh_o==0 else -1               