# Definition for a binary tree node.
# class TreeNode:
#     def __init__(self, val=0, left=None, right=None):
#         self.val = val
#         self.left = left
#         self.right = right
class Solution:
    def upsideDownBinaryTree(self, root: Optional[TreeNode]) -> Optional[TreeNode]:
        def dfs(curr, parent, right):
            if not curr:
                return parent
            res= dfs(curr.left, curr, curr.right)
            curr.left=right
            curr.right=parent

            return res
        
        return dfs(root, None, None)