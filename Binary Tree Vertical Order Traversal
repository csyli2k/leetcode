# Definition for a binary tree node.
# class TreeNode:
#     def __init__(self, val=0, left=None, right=None):
#         self.val = val
#         self.left = left
#         self.right = right
class Solution:
    def verticalOrder(self, root: Optional[TreeNode]) -> List[List[int]]:
        if not root:
            return
        min_c=0
        max_c=0
        q=deque()
        q.append((root,0))
        temp=defaultdict(list)

        while q:
            curr, col= q.popleft()
            min_c= min(min_c, col)
            max_c= max(max_c, col)
            temp[col].append(curr.val)
            if curr.left:
                q.append((curr.left, col-1))
            if curr.right:
                q.append((curr.right, col+1))
        res=[]
        for key in range(min_c, max_c+1):
            res.append(temp[key])
        return res
        
        