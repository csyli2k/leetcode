# Definition for a binary tree node.
# class TreeNode:
#     def __init__(self, val=0, left=None, right=None):
#         self.val = val
#         self.left = left
#         self.right = right
class Solution:
    def delNodes(self, root: Optional[TreeNode], to_delete: List[int]) -> List[TreeNode]:
        res=[]
        def dfs(curr, is_delete):
            if not curr:
                return None
            if is_delete and curr.val not in to_delete:
                res.append(curr)
            if curr.val in to_delete:
                is_delete=True
            else:
                is_delete=False
            curr.left= dfs(curr.left, is_delete)
            curr.right= dfs(curr.right, is_delete)

            return curr if not is_delete else None
        dfs(root, True)
        return res
