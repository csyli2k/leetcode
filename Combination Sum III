class Solution:
    def combinationSum3(self, k: int, n: int) -> List[List[int]]:
        res=[]
        def backtracking(curr, curr_sum, temp):
            if curr_sum==n and len(temp)==k:
                res.append(temp.copy())
                return
            
            if curr_sum>n or len(temp)>k:
                return
            
            for i in range(curr, 10):
                temp.append(i)
                backtracking(i+1, curr_sum+i,temp)
                temp.pop()
            return
        backtracking(1,0,[])
        return res