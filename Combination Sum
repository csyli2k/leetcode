class Solution:
    def combinationSum(self, candidates: List[int], target: int) -> List[List[int]]:
        res=[]
        def backtracking(curr, curr_sum, temp):
            if curr_sum==target:
                res.append(temp.copy())
                return
            if curr_sum> target or curr>=len(candidates):
                return 
            num= candidates[curr]
            temp.append(num)
            backtracking(curr, curr_sum+num, temp)
            temp.pop()
            backtracking(curr+1, curr_sum, temp)

            return
        backtracking(0, 0, [])
        return res


        