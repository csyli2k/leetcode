class Solution:
    def reconstructMatrix(self, upper: int, lower: int, colsum: List[int]) -> List[List[int]]:
        if upper+lower != sum(colsum):
            return []

        n=len(colsum)
        res=[[0]*n for _ in range(2)]

        for i in range(n):
            if colsum[i]> 2:
                return []
            elif colsum[i]==2:
                if upper >0 and lower>0:
                    res[0][i]=1
                    res[1][i]=1
                    lower-=1
                    upper-=1
                else:
                    return []
            elif colsum[i]==1:
                if upper>0 and upper>= lower:
                    upper-=1
                    res[0][i]=1
                elif lower>0 and lower > upper:
                    lower-=1
                    res[1][i]=1
                else:
                    return []
        return res if upper==lower==0 else []