class Solution:
    def longestCommonSubsequence(self, text1: str, text2: str) -> int:
        m=len(text1)
        n=len(text2)
        dp=[[-1 for _ in range(n)] for _ in range(m)]

        def dfs(p,q):
            if p>=m or q>=n:
                return 0
            if dp[p][q] != -1:
                return dp[p][q]
            
            if text1[p]==text2[q]:
                dp[p][q]= 1+ dfs(p+1,q+1)
            else:
                dp[p][q]= max(dfs(p+1,q), dfs(p, q+1))
            
            return dp[p][q]
            
        return dfs(0,0)