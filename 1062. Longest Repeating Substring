class Solution:
    def longestRepeatingSubstring(self, s: str) -> int:
        n=len(s)

        def helper(s_length):
            temp=set()
            for i in range(n-s_length+1):
                curr= s[i:i+s_length]
                if curr in temp:
                    return i

                temp.add(curr)
            return -1
        
        l=1
        r=n
        while l<=r:
            mid=l+(r-l)//2
            # there is repeating reduce l to half
            if helper(mid) != -1:
                l=mid+1
            else:
                r=mid-1
        return r
