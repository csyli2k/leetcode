# Definition for singly-linked list.
# class ListNode:
#     def __init__(self, val=0, next=None):
#         self.val = val
#         self.next = next
class Solution:
    def mergeKLists(self, lists: List[Optional[ListNode]]) -> Optional[ListNode]:
        def merege(l1,l2):
            res=dummy=ListNode()
            while l1 and l2:
                if l1.val < l2.val:
                    dummy.next=ListNode(l1.val)
                    l1=l1.next
                else:
                    dummy.next=ListNode(l2.val)
                    l2=l2.next
                dummy=dummy.next
            if l1:
                dummy.next=l1
            if l2:
                dummy.next=l2
            return res.next
        res=lists
        if not res:
            return 
        while len(res)>1:
            temp=[]
            for i in range(0, len(res), 2):
                if i+1 < len(res):
                    curr= merege(res[i], res[i+1])
                else:
                    curr= res[i]
                temp.append(curr)
            
            res=temp
        return res[0]
                
                