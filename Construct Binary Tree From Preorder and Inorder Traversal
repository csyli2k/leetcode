# Definition for a binary tree node.
# class TreeNode:
#     def __init__(self, val=0, left=None, right=None):
#         self.val = val
#         self.left = left
#         self.right = right
class Solution:
    def buildTree(self, preorder: List[int], inorder: List[int]) -> Optional[TreeNode]:
        if not preorder:
            return 
        
        root= TreeNode(preorder[0])
        root_index= inorder.index(root.val)
        left_length= len(inorder[:root_index])
        root.left= self.buildTree(preorder[1:1+left_length], inorder[:root_index])
        root.right=self.buildTree(preorder[left_length+1:], inorder[left_length+1:])

        return root